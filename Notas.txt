Notas De Programación. 

Aprendiendo a usar Git-GitHub

comandos: 

git --version 

--> Verificamos si tenemos git en nuestro ordenador. 

git init 
--> Se utiliza al inicio del proyecto sirve para empezar hacer seguimiento a los archivos del proyecto.
--> Se debe ejecutar en working area, es decir en la carpte del proyecto.
--> Con esta instrucción se crean las dos areas de almacenamiento. Staging area y Local repo

git add <nombre archivo> // git add .

--> Este comando sirve para llevar un arcivo espacifio o todos al area de ensayo.
--> Aqui se pueden ver los estatus de los archivos, si un archivo se le esta haciendo seguiemiento, y esta en el staging area o si se ha modificado.

git status -s 

--> Sirve para chequear el estado de los archivos del proyecto. 
--> Puedo saber que documentos estan en el staging area (A), cuales han sido modificados (m) y a cuales no se le esta haciendo seguimiento en git (?). 
--> Si cuando hago un status y veo que uno de los archivos no esta en esta area quiere decir que se ha creado un reposito local.

git commit -m "comentario"

--> Comando que sirve para crear el repositorio local. Git Repo
--> Lleva los archivos del que estan en el area de ensayo y crea un repositorio local con los cambios que se han efectuado.
--> Es aqui donde se van a guardar todas las "fotos instantaneas" o cambios que se le han hechyo a los archivos del proyecto. 


git log --oneline

--> Sirve para listar los registro de todos las "fotos instantaneas" o repositorios locales que hemos creado.
--> Nos aparece el identificador (numero alfa-numerico) de cada commit que hemos hecho a lo largo del proyecto. 


NOTA: Cuando hacemos un cambio a un archio  y queremos crear un repositorio local. Se tiene que hacer nuevamente add y commit.


git commit -am "comentarios"

--> Sirve para hacer un add y commit a la vez. 

git reset <identificador del commit> 

--> Sirve para resetear y volver a un determinado commit que se haya hecho a lo largo del proyecto. 
--> si queremos acceder a un commit determinado tenemos que tener en cuenta que se borrar los commit hecho hasta ese punto que desee volver. 

Git commit --amend

--> sirve para editar los comentarios cuando hacemos los commit.. 
--Se abrirá una ventana del editor vim y podemos editar el comentario. 


git config user.name "Williams Espinoza"
git config user.email "espinoza@gmail.com"
--> Git necesita un usuario para saber con quien esta interactuando. Por ello es necesario crear un nombre y un correo que debe ser el mismo correo usado en github. 
--> Es importante crear estas variables de lo comtrario no vamos a poder crear un repositorio remoto en github. 

git config -l 
--> Lista las variables locales y los usuarios que hemos creado entre otras cosas. 

*** Subir un repositorio a GitHub (Remote Repository) ***
S
1- Se debe ir a la pagina de github y hacer click en crear un nuevo repositorio. 
2- Se debe colocar el nombre del repositorio.
3- Como ya tenemos un repositorio local en nuestro ordenador el paso es subirlo a github. Comando a utilizar: 

git remote add origin https//"Del repositorio creado en github" --> Sirve para subir nuestro repo local a github (Remote Repository)
git push -u origin main --> sirve para ir actualizando nuestro repositorio remoto (git hub)



